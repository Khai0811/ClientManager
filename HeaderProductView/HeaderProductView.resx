<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>